[gd_scene load_steps=34 format=2]

[ext_resource path="res://assets/scripts/Pause.gd" type="Script" id=1]
[ext_resource path="res://assets/sound/music/ogg/mus_pause.ogg" type="AudioStream" id=2]
[ext_resource path="res://assets/sprites/HUD/pausemenu/barthing.png" type="Texture" id=3]
[ext_resource path="res://assets/sprites/HUD/pausemenu/paused1.png" type="Texture" id=4]
[ext_resource path="res://assets/sprites/HUD/pausemenu/paused2.png" type="Texture" id=5]
[ext_resource path="res://assets/sprites/HUD/pausemenu/score.png" type="Texture" id=6]
[ext_resource path="res://assets/sprites/HUD/pausemenu/selectshower.png" type="Texture" id=7]
[ext_resource path="res://assets/sprites/HUD/pausemenu/settings.png" type="Texture" id=8]
[ext_resource path="res://assets/sprites/HUD/pausemenu/resume.png" type="Texture" id=9]
[ext_resource path="res://assets/sprites/HUD/pausemenu/titlescreen.png" type="Texture" id=10]
[ext_resource path="res://assets/sound/sfx/sfx_select.wav" type="AudioStream" id=11]
[ext_resource path="res://assets/scripts/randompitchr.gd" type="Script" id=12]
[ext_resource path="res://assets/sound/sfx/sfx_menuexit.wav" type="AudioStream" id=13]
[ext_resource path="res://assets/sound/sfx/sfx_menuenter.wav" type="AudioStream" id=14]
[ext_resource path="res://assets/objects/Settings.tscn" type="PackedScene" id=15]
[ext_resource path="res://assets/sprites/HUD/pausemenu/restart.png" type="Texture" id=16]
[ext_resource path="res://assets/shaders/invertcolors.tres" type="Material" id=17]
[ext_resource path="res://assets/sprites/HUD/pausemenu/treasure.png" type="Texture" id=18]
[ext_resource path="res://assets/fonts/comicz.ttf" type="DynamicFontData" id=19]
[ext_resource path="res://assets/sprites/tiles/hubroom_floor2.png" type="Texture" id=20]
[ext_resource path="res://assets/sprites/HUD/pausemenu/souper.png" type="Texture" id=21]

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

// Xor's gausian blur function 
// Link: https://xorshaders.weebly.com/tutorials/blur-shaders-5-part-2
// Defaults from: https://www.shadertoy.com/view/Xltfzj
//
// BLUR BLURRINESS (Default 8.0)
// BLUR ITERATIONS (Default 16.0 - More is better but slower)
// BLUR QUALITY (Default 4.0 - More is better but slower)
//
// Desc.: Don't have the best performance but will run on almost
// anything, although, if developing for mobile, is better to use 
// 'texture_nodevgaussian(...) instead'.
vec4 texture_xorgaussian(sampler2D tex, vec2 uv, vec2 pixel_size, float blurriness, int iterations, int quality){
	float pi = 6.28;
	
	vec2 radius = blurriness / (1.0 / pixel_size).xy;
	vec4 blurred_tex = texture(tex, uv);
	
	for(float d = 0.0; d < pi; d += pi / float(iterations)){
		for( float i = 1.0 / float(quality); i <= 1.0; i += 1.0 / float(quality) ){
			vec2 directions = uv + vec2(cos(d), sin(d)) * radius * i;
			blurred_tex += texture(tex, directions);
		}
	}
	blurred_tex /= float(quality) * float(iterations) + 1.0;
	
	return blurred_tex;
}

// Experience-Monks' fast gaussian blur function
// Link: https://github.com/Experience-Monks/glsl-fast-gaussian-blur/
//
// BLUR ITERATIONS (Default 16.0 - More is better but slower)
// BLUR DIRECTION (Direction in which the blur is apllied, use vec2(1, 0) for first pass and vec2(0, 1) for second pass)
//
// Desc.: ACTUALLY PRETTY SLOW but still pretty good for custom cinematic
// bloom effects, since this needs render 2 passes 
vec4 texture_monksgaussian_multipass(sampler2D tex, vec2 uv, vec2 pixel_size, int iterations, vec2 direction){
	vec4 blurred_tex = vec4(0.0);
	vec2 resolution = 1.0 / pixel_size;
	
	for (int i=0; i < iterations; i++){
		float size = float(iterations - i);
		
		vec2 off1 = vec2(1.3846153846) * (direction * size);
		vec2 off2 = vec2(3.2307692308) * (direction * size);

		blurred_tex += texture(tex, uv) * 0.2270270270;
		blurred_tex += texture(tex, uv + (off1 / resolution)) * 0.3162162162;
		blurred_tex += texture(tex, uv - (off1 / resolution)) * 0.3162162162;
		blurred_tex += texture(tex, uv + (off2 / resolution)) * 0.0702702703;
		blurred_tex += texture(tex, uv - (off2 / resolution)) * 0.0702702703;
	}
	
	blurred_tex /= float(iterations) + 1.0;
	
	return blurred_tex;
}

// u/_NoDev_'s gaussian blur function
// Discussion Link: https://www.reddit.com/r/godot/comments/klgfo9/help_with_shaders_in_gles2/
// Code Link: https://postimg.cc/7JDJw80d
//
// BLUR BLURRINESS (Default 8.0 - More is better but slower)
// BLUR RADIUS (Default 1.5)
// BLUR DIRECTION (Direction in which the blur is apllied, use vec2(1, 0) for first pass and vec2(0, 1) for second pass)
//
// Desc.: Really fast and GOOD FOR MOST CASES, but might NOT RUN IN THE WEB!
// use 'texture_xorgaussian' instead if you found any issues.
vec4 texture_nodevgaussian_singlepass(sampler2D tex, vec2 uv, vec2 pixel_size, float blurriness, float radius){
	float pi = 3.14;
	float n = 0.0015;
	
	vec4 blurred_tex = vec4(0);
	
	float weight;
	for (float i = -blurriness; i <= blurriness; i++){
		float d = i / pi;
		vec2 anchor = vec2(cos(d), sin(d)) * radius * i;
		vec2 directions = uv + pixel_size * anchor;
		blurred_tex += texture(tex, directions) * n;
		if (i <= 0.0) {n += 0.0015; }
		if (i > 0.0) {n -= 0.0015; }
		weight += n;
	}
	
	float norm = 1.0 / weight;
	blurred_tex *= norm;
	return blurred_tex;
}
vec4 texture_nodevgaussian_multipass(sampler2D tex, vec2 uv, vec2 pixel_size, float blurriness, vec2 direction){
	float n = 0.0015;
	
	vec4 blurred_tex = vec4(0);
	
	float weight;
	for (float i = -blurriness; i <= blurriness; i++){
		vec2 directions = uv + pixel_size * (direction * i);
		blurred_tex += texture(tex, directions) * n;
		if (i <= 0.0) {n += 0.0015; }
		if (i > 0.0) {n -= 0.0015; }
		weight += n;
	}
	
	float norm = 1.0 / weight;
	blurred_tex *= norm;
	return blurred_tex;
}

//  -- EXAMPLE CODE -- //
uniform int blur_type = 0;
uniform int blur_amount = 16;
uniform float blur_radius = 1;
uniform vec2 blur_direction = vec2(1, 1);
void fragment(){
	vec2 uv = FRAGCOORD.xy / (1.0 / SCREEN_PIXEL_SIZE).xy;
	
	if (blur_type == 0) 
	{
		vec4 xorgaussian = texture_xorgaussian(SCREEN_TEXTURE, uv, SCREEN_PIXEL_SIZE, float(blur_amount), 16, 4);
		COLOR =  xorgaussian;
	} 
	else if (blur_type == 1) 
	{
		vec4 monksgaussian_multipass = texture_monksgaussian_multipass(SCREEN_TEXTURE, uv, SCREEN_PIXEL_SIZE, blur_amount, blur_direction);
		COLOR =  monksgaussian_multipass;
	} 
	else if (blur_type == 2) 
	{
		vec4 nodevgaussian_singlepass = texture_nodevgaussian_singlepass(SCREEN_TEXTURE, uv, SCREEN_PIXEL_SIZE, float(blur_amount), blur_radius);
		COLOR =  nodevgaussian_singlepass;
	} 
	else if (blur_type == 3) 
	{
		vec4 nodevgaussian_multipass = texture_nodevgaussian_multipass(SCREEN_TEXTURE, uv, SCREEN_PIXEL_SIZE, float(blur_amount), blur_direction);
		COLOR =  nodevgaussian_multipass;
	} 
	else 
	{
		COLOR =  texture(SCREEN_TEXTURE, uv);
	}
}"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/blur_type = 3
shader_param/blur_amount = 20
shader_param/blur_radius = 2.0
shader_param/blur_direction = Vector2( 1, 1 )

[sub_resource type="DynamicFont" id=27]
size = 41
outline_size = 2
use_filter = true
extra_spacing_top = 3
extra_spacing_char = 1
extra_spacing_space = 1
font_data = ExtResource( 19 )

[sub_resource type="Shader" id=25]
code = "shader_type canvas_item;

uniform vec2 motion = vec2(0.0);
uniform float scale = 1.0;
uniform vec2 offset = vec2(0.0);

void vertex(){
	UV = (VERTEX + offset + TIME * motion) * TEXTURE_PIXEL_SIZE * (1.0/scale);
}"

[sub_resource type="ShaderMaterial" id=26]
shader = SubResource( 25 )
shader_param/motion = Vector2( -30, -30 )
shader_param/scale = 1.0
shader_param/offset = Vector2( 0, 0 )

[sub_resource type="SpriteFrames" id=1]
animations = [ {
"frames": [ ExtResource( 4 ), ExtResource( 5 ) ],
"loop": true,
"name": "default",
"speed": 12.0
} ]

[sub_resource type="DynamicFont" id=28]
outline_size = 2
use_mipmaps = true
use_filter = true
extra_spacing_top = 3
extra_spacing_space = -2
font_data = ExtResource( 19 )

[sub_resource type="Animation" id=2]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("CenterContainer/RightBar:rect_position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 480, 270 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CenterContainer/RightBar/Show:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("CenterContainer/Control:rect_position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 480, 270 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("CenterContainer/Score:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 29.8, 295.3 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("ColorRect:color")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.54902 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("ColorRect2:visible")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ true ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("ColorRect2:color")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0 ) ]
}

[sub_resource type="Animation" id=4]
resource_name = "exit"
tracks/0/type = "value"
tracks/0/path = NodePath("CenterContainer/Control:rect_position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 0.25, 1 ),
"update": 0,
"values": [ Vector2( 480, 270 ), Vector2( 480, -100 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CenterContainer/RightBar:rect_position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 0.353554, 0.15932 ),
"update": 0,
"values": [ Vector2( 480, 270 ), Vector2( 1050, 270 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("CenterContainer/Score:offset")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 0,
"values": [  ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("CenterContainer/RightBar/Show:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("ColorRect:color")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 0.258817, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.54902 ), Color( 1, 1, 1, 0 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:visible")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.6 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("CenterContainer/Score:position")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 0.25, 1 ),
"update": 0,
"values": [ Vector2( 24, -37.4 ), Vector2( -100, -300 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("ColorRect3:material:shader_param/lod")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 0.258817, 1 ),
"update": 0,
"values": [ 2.5, 0.0 ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("CenterContainer/treasure:position")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 0.25, 1 ),
"update": 0,
"values": [ Vector2( 443.1, -61.4 ), Vector2( 500, -300 ) ]
}
tracks/9/type = "value"
tracks/9/path = NodePath("ColorRect3:modulate")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 0.258817, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/10/type = "value"
tracks/10/path = NodePath("Souper:position")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 0.23, 1 ),
"update": 0,
"values": [ Vector2( 230, 450 ), Vector2( -242, 536 ) ]
}

[sub_resource type="Animation" id=5]
resource_name = "fadein"
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect2:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("ColorRect2:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("ColorRect2:color")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0 ), Color( 0, 0, 0, 1 ) ]
}

[sub_resource type="Animation" id=6]
resource_name = "reset"
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect2:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("ColorRect2:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}

[sub_resource type="Animation" id=3]
resource_name = "start"
tracks/0/type = "value"
tracks/0/path = NodePath("CenterContainer/RightBar:rect_position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 0.23, 1 ),
"update": 0,
"values": [ Vector2( 800, 270 ), Vector2( 480, 270 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CenterContainer/RightBar/Show:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = false
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("CenterContainer/Control:rect_position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 0.25, 1 ),
"update": 0,
"values": [ Vector2( 480, 0 ), Vector2( 480, 270 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("CenterContainer/Score:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 0.23, 0.233258 ),
"update": 0,
"values": [ Vector2( -100, -300 ), Vector2( 24, -37.4 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("ColorRect:color")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 0.297302, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.54902 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:visible")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("ColorRect3:material:shader_param/lod")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 0.297302, 1 ),
"update": 0,
"values": [ 0.0, 2.5 ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("CenterContainer/treasure:position")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 0.23, 1 ),
"update": 0,
"values": [ Vector2( 500, -300 ), Vector2( 443.1, -57.4 ) ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("ColorRect3:material:shader_param/blur_amount")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 1,
"values": [  ]
}
tracks/9/type = "value"
tracks/9/path = NodePath("ColorRect3:modulate")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 0.297302, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/10/type = "value"
tracks/10/path = NodePath("Souper:position")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 0.23, 1 ),
"update": 0,
"values": [ Vector2( -242, 536 ), Vector2( 230, 450 ) ]
}

[node name="Pause" type="Control"]
pause_mode = 2
process_priority = 123123
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 1 )

[node name="ColorRect3" type="ColorRect" parent="."]
modulate = Color( 1, 1, 1, 0 )
material = SubResource( 8 )
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 1, 1, 1, 0.498039 )

[node name="ColorRect" type="ColorRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 1, 1, 1, 0.54902 )

[node name="CenterContainer" type="CenterContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="RightBar" type="Control" parent="CenterContainer"]
margin_left = 480.0
margin_top = 270.0
margin_right = 480.0
margin_bottom = 270.0

[node name="Bar" type="Sprite" parent="CenterContainer/RightBar"]
position = Vector2( 68.9, -375.5 )
rotation = -0.0915233
texture = ExtResource( 3 )
centered = false

[node name="Resume" type="Sprite" parent="CenterContainer/RightBar"]
material = ExtResource( 17 )
use_parent_material = true
position = Vector2( 320, -174 )
scale = Vector2( 0.8, 0.8 )
texture = ExtResource( 9 )

[node name="Settings" type="Sprite" parent="CenterContainer/RightBar"]
material = ExtResource( 17 )
use_parent_material = true
position = Vector2( 320, -46 )
scale = Vector2( 0.8, 0.8 )
texture = ExtResource( 8 )

[node name="Titlescreen" type="Sprite" parent="CenterContainer/RightBar"]
material = ExtResource( 17 )
use_parent_material = true
position = Vector2( 320, 210 )
scale = Vector2( 0.8, 0.8 )
texture = ExtResource( 10 )

[node name="restart" type="Sprite" parent="CenterContainer/RightBar"]
material = ExtResource( 17 )
use_parent_material = true
position = Vector2( 320, 82 )
scale = Vector2( 0.8, 0.8 )
texture = ExtResource( 16 )

[node name="Show" type="Sprite" parent="CenterContainer/RightBar"]
modulate = Color( 1, 1, 1, 0 )
position = Vector2( 126, -183 )
texture = ExtResource( 7 )

[node name="VBoxContainerOLD" type="VBoxContainer" parent="CenterContainer"]
visible = false
margin_left = 430.0
margin_top = 237.0
margin_right = 530.0
margin_bottom = 303.0
rect_pivot_offset = Vector2( 40, 0 )
alignment = 1

[node name="Label" type="Label" parent="CenterContainer/VBoxContainerOLD"]
margin_right = 100.0
margin_bottom = 14.0
size_flags_stretch_ratio = 0.0
text = "Paused"
align = 1
valign = 1

[node name="Control" type="Control" parent="CenterContainer/VBoxContainerOLD"]
margin_top = 18.0
margin_right = 100.0
margin_bottom = 18.0

[node name="Resume" type="Button" parent="CenterContainer/VBoxContainerOLD"]
margin_top = 22.0
margin_right = 100.0
margin_bottom = 42.0
rect_min_size = Vector2( 100, 0 )
rect_pivot_offset = Vector2( 32, 0 )
action_mode = 0
text = "Resume"

[node name="Menu" type="Button" parent="CenterContainer/VBoxContainerOLD"]
margin_top = 46.0
margin_right = 100.0
margin_bottom = 66.0
rect_pivot_offset = Vector2( 32, 0 )
text = "Main Menu"

[node name="Score" type="Sprite" parent="CenterContainer"]
position = Vector2( 29.8, 295.3 )
texture = ExtResource( 6 )
centered = false

[node name="scoretext2" type="Label" parent="CenterContainer/Score"]
margin_left = 27.0447
margin_top = 82.6124
margin_right = 327.045
margin_bottom = 170.612
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 1
size_flags_stretch_ratio = 0.0
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_colors/font_outline_modulate = Color( 0, 0, 0, 1 )
custom_colors/font_color_shadow = Color( 0.462745, 0.462745, 0.462745, 1 )
custom_constants/shadow_offset_x = 2
custom_constants/shadow_offset_y = 2
custom_fonts/font = SubResource( 27 )
text = "123456"
align = 1
valign = 1
max_lines_visible = 1

[node name="bg" type="TextureRect" parent="CenterContainer/Score"]
modulate = Color( 0.616667, 0, 1, 1 )
show_behind_parent = true
material = SubResource( 26 )
margin_left = 6.04468
margin_top = 85.6124
margin_right = 356.045
margin_bottom = 173.612
texture = ExtResource( 20 )
expand = true
stretch_mode = 2

[node name="Control" type="Control" parent="CenterContainer"]
margin_left = 480.0
margin_top = 270.0
margin_right = 480.0
margin_bottom = 270.0

[node name="AnimatedSprite" type="AnimatedSprite" parent="CenterContainer/Control"]
visible = false
position = Vector2( -460.9, -265.7 )
frames = SubResource( 1 )
frame = 1
playing = true
centered = false

[node name="pointer" type="Control" parent="CenterContainer"]
margin_left = 480.0
margin_top = 270.0
margin_right = 480.0
margin_bottom = 270.0

[node name="treasure" type="Sprite" parent="CenterContainer"]
position = Vector2( 500, -300 )
texture = ExtResource( 18 )
centered = false

[node name="bg" type="TextureRect" parent="CenterContainer/treasure"]
show_behind_parent = true
material = SubResource( 26 )
margin_left = 8.42062
margin_top = 105.444
margin_right = 151.421
margin_bottom = 193.444
texture = ExtResource( 20 )
expand = true
stretch_mode = 2

[node name="treasure" type="Label" parent="CenterContainer/treasure"]
show_behind_parent = true
margin_left = 7.42062
margin_top = 104.444
margin_right = 147.421
margin_bottom = 192.444
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 1
size_flags_stretch_ratio = 0.0
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_colors/font_outline_modulate = Color( 0, 0, 0, 1 )
custom_colors/font_color_shadow = Color( 0.462745, 0.462745, 0.462745, 1 )
custom_constants/shadow_offset_x = 2
custom_constants/shadow_offset_y = 2
custom_fonts/font = SubResource( 28 )
text = "Treasure Found"
align = 1
valign = 1
autowrap = true
clip_text = true
max_lines_visible = 1

[node name="song" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 2 )
volume_db = 1.0
mix_target = 2
bus = "Music"

[node name="move" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 11 )
volume_db = -6.117
bus = "SFX"

[node name="enter" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 14 )
volume_db = -19.227
bus = "SFX"
script = ExtResource( 12 )

[node name="exit" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 13 )
volume_db = -19.227
bus = "SFX"
script = ExtResource( 12 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/RESET = SubResource( 2 )
anims/exit = SubResource( 4 )
anims/fadein = SubResource( 5 )
anims/reset = SubResource( 6 )
anims/start = SubResource( 3 )

[node name="ColorRect2" type="ColorRect" parent="."]
margin_left = -96.0
margin_top = -96.0
margin_right = 1056.0
margin_bottom = 640.0
color = Color( 0, 0, 0, 0 )

[node name="Souper" type="Sprite" parent="."]
visible = false
position = Vector2( -242, 536 )
scale = Vector2( 0.7, 0.7 )
texture = ExtResource( 21 )

[node name="Settings" parent="." instance=ExtResource( 15 )]
visible = false

[connection signal="pressed" from="CenterContainer/VBoxContainerOLD/Resume" to="." method="_on_Resume_pressed"]
[connection signal="pressed" from="CenterContainer/VBoxContainerOLD/Menu" to="." method="_on_Menu_pressed"]
